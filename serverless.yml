# NOTE: update this with your service name
service: serverless-fetch-metadata-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  # These environment variables are made available to our functions under process.env.
  environment:
    tableName: NFT_Data_Eth_Polygon
  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}

  
# Both GET and POST method is used to transfer data from client to server in HTTP protocol but
# Main difference between POST and GET method is that GET carries request parameter appended
# in URL string while POST carries request parameter in message body which makes it more secure
# way of transferring data from client to server
functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          cors: true
          method: get
          RequestParameters:
            - method.request.querystring.address:
                Required: true
                Caching: false
            - method.request.querystring.chain:
                Required: true
                Caching: false
          #authorizer: aws_iam
    timeout: 60

# custom:
#   bundle:
#     linting: false